/*
 * generated by Xtext 2.24.0
 */
package ishikawa.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class IshikawaGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class EffectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ishikawa.Ishikawa.Effect");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEffectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEffectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cCategoriesAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cCategoriesCategoryParserRuleCall_4_0_0 = (RuleCall)cCategoriesAssignment_4_0.eContents().get(0);
		private final Assignment cCategoriesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCategoriesCategoryParserRuleCall_4_1_0 = (RuleCall)cCategoriesAssignment_4_1.eContents().get(0);
		
		//Effect:
		//	{Effect}
		//	'Effect'
		//	name=EString ('description' description=EString)? (categories+=Category categories+=Category*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Effect}
		//'Effect'
		//name=EString ('description' description=EString)? (categories+=Category categories+=Category*)?
		public Group getGroup() { return cGroup; }
		
		//{Effect}
		public Action getEffectAction_0() { return cEffectAction_0; }
		
		//'Effect'
		public Keyword getEffectKeyword_1() { return cEffectKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('description' description=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//(categories+=Category categories+=Category*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//categories+=Category
		public Assignment getCategoriesAssignment_4_0() { return cCategoriesAssignment_4_0; }
		
		//Category
		public RuleCall getCategoriesCategoryParserRuleCall_4_0_0() { return cCategoriesCategoryParserRuleCall_4_0_0; }
		
		//categories+=Category*
		public Assignment getCategoriesAssignment_4_1() { return cCategoriesAssignment_4_1; }
		
		//Category
		public RuleCall getCategoriesCategoryParserRuleCall_4_1_0() { return cCategoriesCategoryParserRuleCall_4_1_0; }
	}
	public class CategoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ishikawa.Ishikawa.Category");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCategoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCategoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCausesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCausesCauseParserRuleCall_4_1_0 = (RuleCall)cCausesAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cCausesAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cCausesCauseParserRuleCall_4_2_1_0 = (RuleCall)cCausesAssignment_4_2_1.eContents().get(0);
		
		//Category:
		//	{Category}
		//	'Category'
		//	name=EString ('description' description=EString)? ('->' causes+=Cause ('->' causes+=Cause)*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Category}
		//'Category'
		//name=EString ('description' description=EString)? ('->' causes+=Cause ('->' causes+=Cause)*)?
		public Group getGroup() { return cGroup; }
		
		//{Category}
		public Action getCategoryAction_0() { return cCategoryAction_0; }
		
		//'Category'
		public Keyword getCategoryKeyword_1() { return cCategoryKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('description' description=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//('->' causes+=Cause ('->' causes+=Cause)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_0() { return cHyphenMinusGreaterThanSignKeyword_4_0; }
		
		//causes+=Cause
		public Assignment getCausesAssignment_4_1() { return cCausesAssignment_4_1; }
		
		//Cause
		public RuleCall getCausesCauseParserRuleCall_4_1_0() { return cCausesCauseParserRuleCall_4_1_0; }
		
		//('->' causes+=Cause)*
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_2_0() { return cHyphenMinusGreaterThanSignKeyword_4_2_0; }
		
		//causes+=Cause
		public Assignment getCausesAssignment_4_2_1() { return cCausesAssignment_4_2_1; }
		
		//Cause
		public RuleCall getCausesCauseParserRuleCall_4_2_1_0() { return cCausesCauseParserRuleCall_4_2_1_0; }
	}
	public class CauseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ishikawa.Ishikawa.Cause");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCauseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCauseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionEStringParserRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueOfInterestKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueOfInterestAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueOfInterestEStringParserRuleCall_4_1_0 = (RuleCall)cValueOfInterestAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLeftCurlyBracketKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cSubCausesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cSubCausesCauseParserRuleCall_5_1_0 = (RuleCall)cSubCausesAssignment_5_1.eContents().get(0);
		private final Assignment cSubCausesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cSubCausesCauseParserRuleCall_5_2_0 = (RuleCall)cSubCausesAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		
		//Cause:
		//	{Cause}
		//	'Cause'
		//	name=EString ('description' description=EString)? ('valueOfInterest' valueOfInterest=EString)? ('{' subCauses+=Cause
		//	subCauses+=Cause* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Cause}
		//'Cause'
		//name=EString ('description' description=EString)? ('valueOfInterest' valueOfInterest=EString)? ('{' subCauses+=Cause
		//subCauses+=Cause* '}')?
		public Group getGroup() { return cGroup; }
		
		//{Cause}
		public Action getCauseAction_0() { return cCauseAction_0; }
		
		//'Cause'
		public Keyword getCauseKeyword_1() { return cCauseKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('description' description=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'description'
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }
		
		//description=EString
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }
		
		//EString
		public RuleCall getDescriptionEStringParserRuleCall_3_1_0() { return cDescriptionEStringParserRuleCall_3_1_0; }
		
		//('valueOfInterest' valueOfInterest=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'valueOfInterest'
		public Keyword getValueOfInterestKeyword_4_0() { return cValueOfInterestKeyword_4_0; }
		
		//valueOfInterest=EString
		public Assignment getValueOfInterestAssignment_4_1() { return cValueOfInterestAssignment_4_1; }
		
		//EString
		public RuleCall getValueOfInterestEStringParserRuleCall_4_1_0() { return cValueOfInterestEStringParserRuleCall_4_1_0; }
		
		//('{' subCauses+=Cause subCauses+=Cause* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_0() { return cLeftCurlyBracketKeyword_5_0; }
		
		//subCauses+=Cause
		public Assignment getSubCausesAssignment_5_1() { return cSubCausesAssignment_5_1; }
		
		//Cause
		public RuleCall getSubCausesCauseParserRuleCall_5_1_0() { return cSubCausesCauseParserRuleCall_5_1_0; }
		
		//subCauses+=Cause*
		public Assignment getSubCausesAssignment_5_2() { return cSubCausesAssignment_5_2; }
		
		//Cause
		public RuleCall getSubCausesCauseParserRuleCall_5_2_0() { return cSubCausesCauseParserRuleCall_5_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_3() { return cRightCurlyBracketKeyword_5_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ishikawa.Ishikawa.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final EffectElements pEffect;
	private final CategoryElements pCategory;
	private final CauseElements pCause;
	private final EStringElements pEString;
	private final TerminalRule tTAB;
	private final TerminalRule tNEWLINE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IshikawaGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEffect = new EffectElements();
		this.pCategory = new CategoryElements();
		this.pCause = new CauseElements();
		this.pEString = new EStringElements();
		this.tTAB = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ishikawa.Ishikawa.TAB");
		this.tNEWLINE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ishikawa.Ishikawa.NEWLINE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ishikawa.Ishikawa".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Effect:
	//	{Effect}
	//	'Effect'
	//	name=EString ('description' description=EString)? (categories+=Category categories+=Category*)?;
	public EffectElements getEffectAccess() {
		return pEffect;
	}
	
	public ParserRule getEffectRule() {
		return getEffectAccess().getRule();
	}
	
	//Category:
	//	{Category}
	//	'Category'
	//	name=EString ('description' description=EString)? ('->' causes+=Cause ('->' causes+=Cause)*)?;
	public CategoryElements getCategoryAccess() {
		return pCategory;
	}
	
	public ParserRule getCategoryRule() {
		return getCategoryAccess().getRule();
	}
	
	//Cause:
	//	{Cause}
	//	'Cause'
	//	name=EString ('description' description=EString)? ('valueOfInterest' valueOfInterest=EString)? ('{' subCauses+=Cause
	//	subCauses+=Cause* '}')?;
	public CauseElements getCauseAccess() {
		return pCause;
	}
	
	public ParserRule getCauseRule() {
		return getCauseAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal TAB:
	//	'\t'+;
	public TerminalRule getTABRule() {
		return tTAB;
	}
	
	//terminal NEWLINE:
	//	'\r'? '\n'+;
	public TerminalRule getNEWLINERule() {
		return tNEWLINE;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
